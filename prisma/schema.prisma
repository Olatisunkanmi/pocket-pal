generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String @id @default(uuid())
  email      String @unique
  password   String
  first_name String
  last_name  String

  lastLogin DateTime?
  tokens    Token[]
  wallets   Wallet[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Token {
  id        Int      @id @default(autoincrement())
  userId    String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])

  @@index([userId], name: "user_id")
  @@map("tokens")
}

model Wallet {
  id      String @id @default(uuid())
  number  String @unique
  balance Float  @default(0.0)
  userId  String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user         User          @relation(fields: [userId], references: [id])
  sourceTransactions Transaction[] @relation("WalletSourceTransactions")
  destinationTransactions Transaction[] @relation("WalletDestinationTransactions")


  @@map("wallets")
}

model Transaction {
  id                  String          @id @default(uuid())
  amount              Float
  type                TransactionType
  sourceWallet        Wallet?         @relation("WalletSourceTransactions", fields: [sourceWalletId], references: [id])
  sourceWalletId      String?
  destinationWallet   Wallet?         @relation("WalletDestinationTransactions", fields: [destinationWalletId], references: [id])
  destinationWalletId String?
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt

  @@map("transactions")
}

enum TransactionType {
  DEPOSIT
  WITHDRAWAL
  TRANSFER
}
